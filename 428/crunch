#!/usr/bin/python3
# -*- coding: utf-8 -*-

# Copyright Â© 2013 Martin Ueding <dev@martin-ueding.de>
# Licensed under The GNU Public License Version 2 (or later)

#import itertools
#import scipy.interpolate
import json
import matplotlib.pyplot as pl
import numpy as np
import scipy.optimize as op
import scipy.signal
import sys
import unitprint

def zefn(T):
    data = np.genfromtxt('Messdaten/Legierungen/FeZn.txt', skip_header=1)

    bins = data[:, 0]
    counts = data[:, 1]

    peak_indizes = scipy.signal.find_peaks_cwt(counts, np.array([5, ]))
    peak_indizes = np.array(peak_indizes)

    real_peaks = [
        peak_index
        for peak_index in peak_indizes
        if counts[peak_index] > np.max(counts) * 0.1
    ]

    pl.plot(bins, counts)
    pl.plot(bins[real_peaks], counts[real_peaks], linestyle='none', marker='*', markersize=10)
    pl.xlabel('Energiekanal')
    pl.ylabel('Anzahl')
    pl.grid(True)
    pl.savefig('_build/FeZn.pdf')

def main():
    T = {}

    zefn(T)

    with open('_build/template.js', 'w') as f:
        json.dump(T, f, indent=4, sort_keys=True)

if __name__ == "__main__":
    main()
